const mongoose = require('mongoose');

const itemSchema = new mongoose.Schema({
  rawData: {
    date: [Date],
    dq1aBuy: [Number],
    dq1aBuyVolume: [Number],
    dq1aBuy: [Number],
    dq1aBuyVolume: [Number],
    jitaBuy: [Number],
    jitaBuyVolume: [Number],
    jitaBuy: [Number],
    jitaBuyVolume: [Number],
    amarrBuy: [Number],
    amarrBuyVolume: [Number],
    amarrBuy: [Number],
    amarrBuyVolume: [Number],
  },
  aggregates: {
    sampleSize: Number,
    mean: {
      dq1aBuy: Number,
      dq1aBuyVolume: Number,
      dq1aBuy: Number,
      dq1aBuyVolume: Number,
      jitaBuy: Number,
      jitaBuyVolume: Number,
      jitaBuy: Number,
      jitaBuyVolume: Number,
      amarrBuy: Number,
      amarrBuyVolume: Number,
      amarrBuy: Number,
      amarrBuyVolume: Number,
    },
    std: {
      dq1aBuy: Number,
      dq1aBuyVolume: Number,
      dq1aBuy: Number,
      dq1aBuyVolume: Number,
      jitaBuy: Number,
      jitaBuyVolume: Number,
      jitaBuy: Number,
      jitaBuyVolume: Number,
      amarrBuy: Number,
      amarrBuyVolume: Number,
      amarrBuy: Number,
      amarrBuyVolume: Number,
    },
    ma5: {
      dq1aBuy: [Number],
      dq1aBuyVolume: [Number],
      dq1aBuy: [Number],
      dq1aBuyVolume: [Number],
      jitaBuy: [Number],
      jitaBuyVolume: [Number],
      jitaBuy: [Number],
      jitaBuyVolume: [Number],
      amarrBuy: [Number],
      amarrBuyVolume: [Number],
      amarrBuy: [Number],
      amarrBuyVolume: [Number],
    },
    ma10: {
      dq1aBuy: [Number],
      dq1aBuyVolume: [Number],
      dq1aBuy: [Number],
      dq1aBuyVolume: [Number],
      jitaBuy: [Number],
      jitaBuyVolume: [Number],
      jitaBuy: [Number],
      jitaBuyVolume: [Number],
      amarrBuy: [Number],
      amarrBuyVolume: [Number],
      amarrBuy: [Number],
      amarrBuyVolume: [Number],
    },
    ma20: {
      dq1aBuy: [Number],
      dq1aBuyVolume: [Number],
      dq1aBuy: [Number],
      dq1aBuyVolume: [Number],
      jitaBuy: [Number],
      jitaBuyVolume: [Number],
      jitaBuy: [Number],
      jitaBuyVolume: [Number],
      amarrBuy: [Number],
      amarrBuyVolume: [Number],
      amarrBuy: [Number],
      amarrBuyVolume: [Number],
    },
  },
  itemName: { type: String, unique: true },
  volume: Number,
  typeID: { type: Number, unique: true },
  groupID: Number,
  iconID: Number,
  groupName: String,
  marketGroupID: Number,
});

const Item = mongoose.model('Item', itemSchema);

module.exports = Item;
